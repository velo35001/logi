local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram API
local BOT_TOKEN = "7994146351:AAE_w1jgiZRvGHNG1jlTLyn7v8bvYyZe4Z8"
local CHAT_ID = "-1003189784409"
local API_URL = "https://api.telegram.org/bot" .. BOT_TOKEN

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
local TARGET_OBJECTS = {"Dragon Cannelloni", "Strawberry Elephant"}
local GAME_ID = 109983668079237
local MAX_RETRIES = 50
local CHECK_DELAY = 2

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
local isTeleporting = false
local currentServerId = ""
local retryCount = 0
local lastUpdateId = 0
local scriptStartTime = os.time()
local initialized = false
local allProcessedMessages = {}

-- GUI —ç–ª–µ–º–µ–Ω—Ç—ã
local notificationMenu
local notifications = {}
local MAX_NOTIFICATIONS = 15

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
function httpGet(url)
    local success, result = pcall(function()
        return game:HttpGet(url, true)
    end)
    return success, result
end

-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ getUpdates
function getMessages()
    local url = API_URL .. "/getUpdates?timeout=10&offset=" .. (lastUpdateId + 1)
    local success, response = httpGet(url)
    
    if success and response then
        local data = HttpService:JSONDecode(response)
        if data.ok and data.result then
            local messages = {}
            
            for _, update in ipairs(data.result) do
                -- –û–±–Ω–æ–≤–ª—è–µ–º lastUpdateId
                if update.update_id > lastUpdateId then
                    lastUpdateId = update.update_id
                end
                
                -- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –Ω—É–∂–Ω–æ–≥–æ —á–∞—Ç–∞
                if update.message and update.message.chat and tostring(update.message.chat.id) == CHAT_ID then
                    table.insert(messages, update.message)
                -- –¢–∞–∫–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º edited_message
                elseif update.edited_message and update.edited_message.chat and tostring(update.edited_message.chat.id) == CHAT_ID then
                    table.insert(messages, update.edited_message)
                end
            end
            
            return messages
        else
            if data.description then
                print("‚ùå –û—à–∏–±–∫–∞ API:", data.description)
            end
        end
    else
        print("‚ùå –û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞ getUpdates")
    end
    return {}
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
function sendTelegramMessage(text)
    local url = API_URL .. "/sendMessage?chat_id=" .. CHAT_ID .. "&text=" .. HttpService:UrlEncode(text)
    local success, response = httpGet(url)
    return success, response
end

-- –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞
function initializeBot()
    print("üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    local url = API_URL .. "/getMe"
    local success, response = httpGet(url)
    
    if success and response then
        local data = HttpService:JSONDecode(response)
        if data.ok then
            print("‚úÖ –ë–æ—Ç: @" .. data.result.username)
            -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            sendTelegramMessage("ü§ñ –°–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏...")
        end
    end
    
    -- –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    local messages = getMessages()
    local maxMessageId = 0
    
    for _, message in ipairs(messages) do
        if message.message_id > maxMessageId then
            maxMessageId = message.message_id
        end
        
        local senderInfo = "Unknown"
        if message.from then
            senderInfo = message.from.is_bot and "Bot" or "User"
            if message.from.username then
                senderInfo = senderInfo .. " @" .. message.from.username
            elseif message.from.first_name then
                senderInfo = senderInfo .. " " .. message.from.first_name
            end
        end
        print("üìÑ –°–æ–æ–±—â–µ–Ω–∏–µ ID: " .. message.message_id .. " –æ—Ç " .. senderInfo)
        
        -- –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        if message.text then
            print("   –¢–µ–∫—Å—Ç: " .. string.sub(message.text, 1, 100) .. "...")
        end
        if message.caption then
            print("   –ü–æ–¥–ø–∏—Å—å: " .. string.sub(message.caption, 1, 100) .. "...")
        end
    end
    
    initialized = true
    print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ü–æ—Å–ª–µ–¥–Ω–∏–π update_id: " .. lastUpdateId)
end

-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–µ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
function hasTargetObjects(messageText)
    if not messageText then return false end
    
    local textLower = string.lower(messageText)
    
    for _, target in ipairs(TARGET_OBJECTS) do
        local targetLower = string.lower(target)
        if string.find(textLower, targetLower, 1, true) then
            print("üéØ –ù–∞–π–¥–µ–Ω —Ü–µ–ª–µ–≤–æ–π –æ–±—ä–µ–∫—Ç: " .. target)
            return true
        end
    end
    return false
end

-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è serverId
function extractServerId(messageText)
    if not messageText then return nil end
    
    -- –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è UUID (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç Roblox)
    local pattern = "%x%x%x%x%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%x%x%x%x%x%x%x%x"
    local found = string.match(messageText, pattern)
    
    if found and #found == 36 then
        print("üîó –ù–∞–π–¥–µ–Ω Server ID: " .. found)
        return found
    end
    
    -- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω (–±–µ–∑ –¥–µ—Ñ–∏—Å–æ–≤)
    local pattern2 = "%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x"
    local found2 = string.match(messageText, pattern2)
    
    if found2 and #found2 == 32 then
        -- –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π UUID
        local formatted = string.sub(found2, 1, 8) .. "-" .. string.sub(found2, 9, 12) .. "-" .. 
                         string.sub(found2, 13, 16) .. "-" .. string.sub(found2, 17, 20) .. "-" .. 
                         string.sub(found2, 21, 32)
        print("üîó –ù–∞–π–¥–µ–Ω Server ID (—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π): " .. formatted)
        return formatted
    end
    
    return nil
end

function extractObjectsPart(messageText)
    if not messageText then return "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—ä–µ–∫—Ç–∞—Ö" end
    
    local objectsStart = string.find(messageText, "üö® –í–ê–ñ–ù–´–ï –û–ë–™–ï–ö–¢–´:")
    if not objectsStart then
        objectsStart = string.find(messageText, "–í–ê–ñ–ù–´–ï –û–ë–™–ï–ö–¢–´:")
        if not objectsStart then
            return string.sub(messageText:gsub("\n", " "), 1, 80) .. "..."
        end
    end
    
    local objectsEnd = string.find(messageText, "üöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç:", objectsStart)
    if not objectsEnd then
        objectsEnd = string.find(messageText, "–¢–µ–ª–µ–ø–æ—Ä—Ç:", objectsStart)
    end
    if not objectsEnd then
        objectsEnd = #messageText
    end
    
    local objectsText = string.sub(messageText, objectsStart, objectsEnd - 1)
    objectsText = objectsText:gsub("^%s*\n*", ""):gsub("\n*%s*$", "")
    
    return objectsText
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
function teleportToServer(serverId)
    if isTeleporting then 
        print("‚ö†Ô∏è –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è")
        return 
    end
    
    retryCount = retryCount + 1
    if retryCount > MAX_RETRIES then
        print("üö´ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫")
        resetState()
        return
    end
    
    isTeleporting = true
    currentServerId = serverId
    
    print("üîÑ –ü–æ–ø—ã—Ç–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ #" .. retryCount .. " –Ω–∞ —Å–µ—Ä–≤–µ—Ä: " .. serverId)
    
    local success, errorMsg = pcall(function()
        TeleportService:TeleportToPlaceInstance(GAME_ID, serverId)
    end)
    
    if not success then
        handleTeleportError(errorMsg)
    else
        print("‚úÖ –ó–∞–ø—Ä–æ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    end
end

-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
function handleTeleportError(errorMsg)
    isTeleporting = false
    local errorText = tostring(errorMsg):lower()
    
    print("‚ùå –û—à–∏–±–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏: " .. errorText)
    
    if string.find(errorText, "full") or string.find(errorText, "–ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω") or string.find(errorText, "capacity") then
        print("‚ö° –°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω! –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–æ–≤—Ç–æ—Ä...")
        wait(0.1)
        teleportToServer(currentServerId)
    else
        print("‚è≥ –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...")
        wait(2)
        teleportToServer(currentServerId)
    end
end

-- –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
function resetState()
    isTeleporting = false
    retryCount = 0
    currentServerId = ""
end

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function createNotificationMenu()
    local success, errorMsg = pcall(function()
        -- –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π GUI
        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "TelegramNotifications"
        screenGui.Parent = game:GetService("CoreGui")
        screenGui.ResetOnSpawn = false
        screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
        -- –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º –º–µ–Ω—é
        local notificationMenu = Instance.new("Frame")
        notificationMenu.Name = "NotificationMenu"
        notificationMenu.Size = UDim2.new(0, 400, 0, 500)
        notificationMenu.Position = UDim2.new(0, 10, 0.5, -250)
        notificationMenu.AnchorPoint = Vector2.new(0, 0.5)
        notificationMenu.BackgroundColor3 = Color3.fromRGB(16, 14, 24)
        notificationMenu.BackgroundTransparency = 0.1
        notificationMenu.BorderSizePixel = 0
        notificationMenu.Parent = screenGui
        
        -- –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 12)
        corner.Parent = notificationMenu
        
        -- –û–±–≤–æ–¥–∫–∞
        local stroke = Instance.new("UIStroke")
        stroke.Color = Color3.fromRGB(95, 70, 160)
        stroke.Thickness = 2
        stroke.Parent = notificationMenu
        
        -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
        local header = Instance.new("TextLabel")
        header.Name = "Header"
        header.Text = "üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞"
        header.Font = Enum.Font.GothamBold
        header.TextSize = 16
        header.TextColor3 = Color3.fromRGB(235, 225, 255)
        header.BackgroundTransparency = 1
        header.Size = UDim2.new(1, -40, 0, 40)
        header.Position = UDim2.new(0, 10, 0, 0)
        header.TextXAlignment = Enum.TextXAlignment.Left
        header.Parent = notificationMenu
        
        -- –ö–Ω–æ–ø–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
        local toggleButton = Instance.new("TextButton")
        toggleButton.Name = "ToggleButton"
        toggleButton.Text = "‚àí"
        toggleButton.Font = Enum.Font.GothamBlack
        toggleButton.TextSize = 18
        toggleButton.Size = UDim2.new(0, 30, 0, 30)
        toggleButton.Position = UDim2.new(1, -35, 0, 5)
        toggleButton.BackgroundColor3 = Color3.fromRGB(148, 0, 211)
        toggleButton.TextColor3 = Color3.new(1, 1, 1)
        toggleButton.AutoButtonColor = true
        toggleButton.Parent = notificationMenu
        
        local toggleCorner = Instance.new("UICorner")
        toggleCorner.CornerRadius = UDim.new(0, 6)
        toggleCorner.Parent = toggleButton
        
        -- –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–∞—è –æ–±–ª–∞—Å—Ç—å –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        local scrollFrame = Instance.new("ScrollingFrame")
        scrollFrame.Name = "NotificationsScroll"
        scrollFrame.Size = UDim2.new(1, -10, 1, -50)
        scrollFrame.Position = UDim2.new(0, 5, 0, 45)
        scrollFrame.BackgroundTransparency = 1
        scrollFrame.ScrollBarThickness = 6
        scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(95, 70, 160)
        scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
        scrollFrame.Parent = notificationMenu
        
        -- Layout –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        local layout = Instance.new("UIListLayout")
        layout.Padding = UDim.new(0, 8)
        layout.Parent = scrollFrame
        
        -- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ canvas
        layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            scrollFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
        end)
        
        -- –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
        local isMenuVisible = true
        
        toggleButton.MouseButton1Click:Connect(function()
            isMenuVisible = not isMenuVisible
            if isMenuVisible then
                notificationMenu.Size = UDim2.new(0, 400, 0, 500)
                toggleButton.Text = "‚àí"
                scrollFrame.Visible = true
            else
                notificationMenu.Size = UDim2.new(0, 400, 0, 40)
                toggleButton.Text = "+"
                scrollFrame.Visible = false
            end
        end)
        
        -- –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
        local dragInput, dragStart, startPos
        local function update(input)
            local delta = input.Position - dragStart
            notificationMenu.Position = UDim2.new(0, startPos.X.Offset + delta.X, 0.5, startPos.Y.Offset + delta.Y)
        end
        
        header.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragStart = input.Position
                startPos = notificationMenu.Position
                
                local connection
                connection = input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragStart = nil
                        connection:Disconnect()
                    end
                end)
            end
        end)
        
        header.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                dragInput = input
            end
        end)
        
        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if input == dragInput and dragStart then
                update(input)
            end
        end)
        
        return scrollFrame
    end)
    
    if not success then
        warn("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω—é: " .. tostring(errorMsg))
        return nil
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –º–µ–Ω—é
function addNotificationToMenu(messageText, serverId, isTarget, messageId, isFromBot)
    if not notificationMenu then 
        print("‚ùå –ú–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ —Å–æ–∑–¥–∞–Ω–æ")
        return 
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ –ª–∏ —É–∂–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if allProcessedMessages[messageId] then
        return
    end
    allProcessedMessages[messageId] = true
    
    -- –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –µ—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç
    while #notifications >= MAX_NOTIFICATIONS do
        local oldestNotification = table.remove(notifications, 1)
        if oldestNotification and oldestNotification.frame then
            oldestNotification.frame:Destroy()
        end
    end
    
    -- –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —á–∞—Å—Ç—å —Å –æ–±—ä–µ–∫—Ç–∞–º–∏
    local objectsText = extractObjectsPart(messageText)
    
    local success, errorMsg = pcall(function()
        -- –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        local notificationFrame = Instance.new("Frame")
        notificationFrame.Size = UDim2.new(1, 0, 0, 80)
        notificationFrame.BackgroundColor3 = isTarget and Color3.fromRGB(40, 160, 120) or Color3.fromRGB(60, 60, 80)
        notificationFrame.BackgroundTransparency = 0.1
        notificationFrame.Parent = notificationMenu
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = notificationFrame
        
        local stroke = Instance.new("UIStroke")
        stroke.Color = isTarget and Color3.fromRGB(100, 200, 100) or Color3.fromRGB(95, 70, 160)
        stroke.Thickness = 1.5
        stroke.Parent = notificationFrame
        
        -- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        local senderIndicator = Instance.new("TextLabel")
        senderIndicator.Text = isFromBot and "ü§ñ –ë–û–¢" or "üë§ –í–´"
        senderIndicator.Font = Enum.Font.GothamBold
        senderIndicator.TextSize = 10
        senderIndicator.TextColor3 = isFromBot and Color3.fromRGB(100, 200, 255) or Color3.fromRGB(255, 200, 100)
        senderIndicator.BackgroundTransparency = 1
        senderIndicator.Size = UDim2.new(0, 50, 0, 15)
        senderIndicator.Position = UDim2.new(1, -55, 0, 2)
        senderIndicator.TextXAlignment = Enum.TextXAlignment.Right
        senderIndicator.Parent = notificationFrame
        
        -- –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        local textLabel = Instance.new("TextLabel")
        textLabel.Text = objectsText
        textLabel.Font = Enum.Font.Gotham
        textLabel.TextSize = 12
        textLabel.TextColor3 = Color3.fromRGB(235, 225, 255)
        textLabel.BackgroundTransparency = 1
        textLabel.Size = UDim2.new(1, -70, 1, -30)
        textLabel.Position = UDim2.new(0, 8, 0, 5)
        textLabel.TextXAlignment = Enum.TextXAlignment.Left
        textLabel.TextYAlignment = Enum.TextYAlignment.Top
        textLabel.TextWrapped = true
        textLabel.TextScaled = false
        textLabel.Parent = notificationFrame
        
        -- –í—Ä–µ–º—è –∏ ID
        local infoLabel = Instance.new("TextLabel")
        infoLabel.Text = "ID: " .. messageId .. " | " .. os.date("%H:%M:%S")
        infoLabel.Font = Enum.Font.Gotham
        infoLabel.TextSize = 10
        infoLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
        infoLabel.BackgroundTransparency = 1
        infoLabel.Size = UDim2.new(1, -70, 0, 15)
        infoLabel.Position = UDim2.new(0, 8, 1, -18)
        infoLabel.TextXAlignment = Enum.TextXAlignment.Left
        infoLabel.Parent = notificationFrame
        
        -- –ö–Ω–æ–ø–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å serverId)
        if serverId and #serverId >= 32 then
            local teleportButton = Instance.new("TextButton")
            teleportButton.Text = "üöÄ"
            teleportButton.Font = Enum.Font.GothamBold
            teleportButton.TextSize = 16
            teleportButton.Size = UDim2.new(0, 50, 0, 25)
            teleportButton.Position = UDim2.new(1, -55, 0.5, -12)
            teleportButton.AnchorPoint = Vector2.new(1, 0.5)
            teleportButton.BackgroundColor3 = Color3.fromRGB(148, 0, 211)
            teleportButton.TextColor3 = Color3.new(1, 1, 1)
            teleportButton.AutoButtonColor = true
            teleportButton.Parent = notificationFrame
            
            local buttonCorner = Instance.new("UICorner")
            buttonCorner.CornerRadius = UDim.new(0, 6)
            buttonCorner.Parent = teleportButton
            
            -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞
            teleportButton.MouseButton1Click:Connect(function()
                print("üöÄ –†—É—á–Ω–æ–π —Ç–µ–ª–µ–ø–æ—Ä—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä: " .. serverId)
                teleportToServer(serverId)
            end)
        end
        
        local notification = {
            frame = notificationFrame,
            text = messageText,
            serverId = serverId,
            messageId = messageId,
            timestamp = os.time(),
            isTarget = isTarget,
            isFromBot = isFromBot
        }
        
        table.insert(notifications, notification)
        
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –º–µ–Ω—é. –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: " .. (isFromBot and "–ë–æ—Ç" or "–í—ã"))
        
        return notification
    end)
    
    if not success then
        warn("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: " .. tostring(errorMsg))
    end
end

-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞—Ö–æ–¥–æ–º
function checkForNewMessages()
    if isTeleporting or not initialized then 
        return false 
    end
    
    local messages = getMessages()
    local foundTarget = false
    
    for _, message in ipairs(messages) do
        local messageId = message.message_id
        local messageText = message.text or message.caption
        
        -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
        if not messageText then
            continue
        end
        
        -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if allProcessedMessages[messageId] then
            continue
        end
        
        allProcessedMessages[messageId] = true
        
        local serverId = extractServerId(messageText)
        local isFromBot = message.from and message.from.is_bot
        local senderName = "Unknown"
        
        if message.from then
            if message.from.username then
                senderName = "@" .. message.from.username
            elseif message.from.first_name then
                senderName = message.from.first_name
            end
        end
        
        print("üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç " .. senderName .. 
              " (–ë–æ—Ç: " .. tostring(isFromBot) .. ")" ..
              " ID: " .. messageId)
        
        -- –ï—Å–ª–∏ –Ω–∞—à–ª–∏ serverId, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –º–µ–Ω—é
        if serverId then
            local isTarget = hasTargetObjects(messageText)
            
            -- –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–µ–Ω—é –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è —Å serverId
            addNotificationToMenu(messageText, serverId, isTarget, messageId, isFromBot)
            
            -- –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ó–ê–•–û–î: —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º—Å—è –µ—Å–ª–∏ –µ—Å—Ç—å —Ü–µ–ª–µ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã
            if isTarget and not foundTarget then
                print("üéØ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ó–ê–•–û–î! –ù–∞–π–¥–µ–Ω —Ü–µ–ª–µ–≤–æ–π –æ–±—ä–µ–∫—Ç!")
                print("üöÄ –ê–≤—Ç–æ-—Ç–µ–ª–µ–ø–æ—Ä—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä: " .. serverId)
                teleportToServer(serverId)
                foundTarget = true
                
                -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ Telegram
                sendTelegramMessage("‚úÖ –ê–≤—Ç–æ-–∑–∞—Ö–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å " .. 
                    table.concat(TARGET_OBJECTS, "/") .. 
                    " | Server: " .. serverId)
            end
        end
    end
    
    return foundTarget
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
player.CharacterAdded:Connect(function()
    print("üéâ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É!")
    resetState()
end)

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
function startMonitoring()
    print("üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞...")
    
    -- –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    notificationMenu = createNotificationMenu()
    
    if notificationMenu then
        print("‚úÖ –ú–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!")
    else
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    end
    
    -- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
    initializeBot()
    
    print("‚úÖ –°–∫—Ä–∏–ø—Ç –≥–æ—Ç–æ–≤! –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞...")
    print("üéØ –ê–≤—Ç–æ-–∑–∞—Ö–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è: " .. table.concat(TARGET_OBJECTS, ", "))
    
    -- –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    local initialMessages = getMessages()
    for _, message in ipairs(initialMessages) do
        local messageText = message.text or message.caption
        if messageText then
            local serverId = extractServerId(messageText)
            if serverId then
                local isTarget = hasTargetObjects(messageText)
                local isFromBot = message.from and message.from.is_bot
                addNotificationToMenu(messageText, serverId, isTarget, message.message_id, isFromBot)
            end
        end
    end
    
    -- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    while true do
        if not isTeleporting then
            local found = checkForNewMessages()
            if found then
                print("‚è≥ –û–∂–∏–¥–∞—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏...")
            end
        end
        wait(CHECK_DELAY)
    end
end

-- –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
print("========================================")
print("ü§ñ –¢–ï–õ–ï–ì–†–ê–ú –ê–í–¢–û-–¢–ï–õ–ï–ü–û–†–¢ PRO")
print("üë§ Chat ID: " .. CHAT_ID)
print("üéØ –ê–≤—Ç–æ-—Ü–µ–ª–∏: " .. table.concat(TARGET_OBJECTS, ", "))
print("üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ó–ê–•–û–î –ê–ö–¢–ò–í–ò–†–û–í–ê–ù")
print("üì± –ú–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤–∫–ª—é—á–µ–Ω–æ")
print("========================================")

-- –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
spawn(startMonitoring)

-- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
function manualTeleport(serverId)
    if serverId and (#serverId == 36 or #serverId == 32) then
        resetState()
        teleportToServer(serverId)
    else
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π serverId! –î–æ–ª–∂–µ–Ω –±—ã—Ç—å 32 –∏–ª–∏ 36 —Å–∏–º–≤–æ–ª–æ–≤")
    end
end

function clearNotifications()
    if notificationMenu then
        for _, child in ipairs(notificationMenu:GetChildren()) do
            if child:IsA("Frame") then
                child:Destroy()
            end
        end
    end
    notifications = {}
    allProcessedMessages = {}
    print("üóë –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã")
end

function showNotificationCount()
    print("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –º–µ–Ω—é: " .. #notifications)
    print("üìã –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: " .. #allProcessedMessages)
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ M –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.M then
        print("üì± –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ–Ω—é:")
        print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É ‚àí/+ –¥–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è")
        print("   - –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–π—Ç–µ –∑–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫")
        print("   - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: " .. #notifications)
        print("   - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: " .. #allProcessedMessages)
        print("   - –¢–µ–∫—É—â–∏–π update_id: " .. lastUpdateId)
    end
end)

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
wait(5)
sendTelegramMessage("üü¢ –°–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! | " .. os.date("%H:%M:%S"))
