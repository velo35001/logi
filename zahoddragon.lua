local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram API
local BOT_TOKEN = "7994146351:AAE_w1jgiZRvGHNG1jlTLyn7v8bvYyZe4Z8"
local CHAT_ID = "-1003189784409"
local API_URL = "https://api.telegram.org/bot" .. BOT_TOKEN

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
local TARGET_OBJECTS = {"Dragon Cannelloni", "Strawberry Elephant"}
local GAME_ID = 109983668079237
local MAX_RETRIES = 50
local CHECK_DELAY = 2

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
local isTeleporting = false
local currentServerId = ""
local retryCount = 0
local lastUpdateId = 0
local scriptStartTime = os.time()
local initialized = false
local allProcessedMessages = {}

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
function httpGet(url)
    local success, result = pcall(function()
        return game:HttpGet(url, true)
    end)
    return success, result
end

-- –ü–†–ê–í–ò–õ–¨–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ getUpdates
function getMessages()
    local url = API_URL .. "/getUpdates?timeout=10&offset=" .. (lastUpdateId + 1)
    local success, response = httpGet(url)
    
    if success and response then
        local data = HttpService:JSONDecode(response)
        if data.ok and data.result then
            local messages = {}
            
            for _, update in ipairs(data.result) do
                -- –û–±–Ω–æ–≤–ª—è–µ–º lastUpdateId
                if update.update_id > lastUpdateId then
                    lastUpdateId = update.update_id
                end
                
                -- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –Ω—É–∂–Ω–æ–≥–æ —á–∞—Ç–∞
                if update.message and update.message.chat and tostring(update.message.chat.id) == CHAT_ID then
                    table.insert(messages, update.message)
                end
            end
            
            return messages
        else
            if data.description then
                print("‚ùå –û—à–∏–±–∫–∞ API:", data.description)
            end
        end
    else
        print("‚ùå –û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞")
    end
    return {}
end

-- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ getChat (–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ)
function getChatInfo()
    local url = API_URL .. "/getChat?chat_id=" .. CHAT_ID
    local success, response = httpGet(url)
    
    if success and response then
        local data = HttpService:JSONDecode(response)
        if data.ok then
            print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ:")
            print("   –ù–∞–∑–≤–∞–Ω–∏–µ:", data.result.title or "–ù–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è")
            print("   –¢–∏–ø:", data.result.type or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            return true
        end
    end
    return false
end

-- –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
function initializeBot()
    print("üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    local url = API_URL .. "/getMe"
    local success, response = httpGet(url)
    
    if success and response then
        local data = HttpService:JSONDecode(response)
        if data.ok then
            print("‚úÖ –ë–æ—Ç: @" .. data.result.username)
        end
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    if not getChatInfo() then
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
        print("   - –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É")
        print("   - –ë–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ —á—Ç–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π")
        print("   - CHAT_ID —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    end
    
    -- –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    local messages = getMessages()
    local maxMessageId = 0
    
    for _, message in ipairs(messages) do
        if message.message_id > maxMessageId then
            maxMessageId = message.message_id
        end
        
        local senderInfo = "Unknown"
        if message.from then
            senderInfo = message.from.is_bot and "Bot" or "User"
            if message.from.username then
                senderInfo = senderInfo .. " @" .. message.from.username
            end
        end
        print("üìÑ –°–æ–æ–±—â–µ–Ω–∏–µ ID: " .. message.message_id .. " –æ—Ç " .. senderInfo)
    end
    
    initialized = true
    print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ü–æ—Å–ª–µ–¥–Ω–∏–π update_id: " .. lastUpdateId)
end

function hasTargetObjects(messageText)
    if not messageText then return false end
    
    for _, target in ipairs(TARGET_OBJECTS) do
        if string.find(string.lower(messageText), string.lower(target)) then
            return true
        end
    end
    return false
end

function extractServerId(messageText)
    if not messageText then return nil end
    
    local patterns = {
        "%x%x%x%x%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%x%x%x%x%x%x%x%x",
        "%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x"
    }
    
    for _, pattern in ipairs(patterns) do
        local found = messageText:match(pattern)
        if found and (#found == 36 or #found == 32) then
            return found
        end
    end
    return nil
end

function extractObjectsPart(messageText)
    if not messageText then return "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—ä–µ–∫—Ç–∞—Ö" end
    
    local objectsStart = messageText:find("üö® –í–ê–ñ–ù–´–ï –û–ë–™–ï–ö–¢–´:")
    if not objectsStart then
        objectsStart = messageText:find("–í–ê–ñ–ù–´–ï –û–ë–™–ï–ö–¢–´:")
        if not objectsStart then
            return messageText:gsub("\n", " "):sub(1, 80) .. "..."
        end
    end
    
    local objectsEnd = messageText:find("üöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç:", objectsStart)
    if not objectsEnd then
        objectsEnd = messageText:find("–¢–µ–ª–µ–ø–æ—Ä—Ç:", objectsStart)
    end
    if not objectsEnd then
        objectsEnd = #messageText
    end
    
    local objectsText = messageText:sub(objectsStart, objectsEnd - 1)
    objectsText = objectsText:gsub("^%s*\n*", ""):gsub("\n*%s*$", "")
    
    return objectsText
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
function teleportToServer(serverId)
    if isTeleporting then return end
    
    retryCount = retryCount + 1
    if retryCount > MAX_RETRIES then
        print("üö´ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫")
        resetState()
        return
    end
    
    isTeleporting = true
    currentServerId = serverId
    
    print("üîÑ –ü–æ–ø—ã—Ç–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ #" .. retryCount .. " –Ω–∞ —Å–µ—Ä–≤–µ—Ä: " .. serverId)
    
    local success, errorMsg = pcall(function()
        TeleportService:TeleportToPlaceInstance(GAME_ID, serverId)
    end)
    
    if not success then
        handleTeleportError(errorMsg)
    else
        print("‚úÖ –ó–∞–ø—Ä–æ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    end
end

-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
function handleTeleportError(errorMsg)
    isTeleporting = false
    local errorText = tostring(errorMsg):lower()
    
    print("‚ùå –û—à–∏–±–∫–∞: " .. errorText)
    
    if errorText:find("full") or errorText:find("–ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω") or errorText:find("capacity") then
        print("‚ö° –°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω! –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–æ–≤—Ç–æ—Ä...")
        wait(0.1)
        teleportToServer(currentServerId)
    else
        print("‚è≥ –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...")
        wait(2)
        teleportToServer(currentServerId)
    end
end

-- –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
function resetState()
    isTeleporting = false
    retryCount = 0
    currentServerId = ""
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
function createNotificationMenu()
    -- ... (–≤–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é)
end

local notificationMenu = createNotificationMenu()
local notifications = {}
local MAX_NOTIFICATIONS = 15

function addNotificationToMenu(messageText, serverId, isTarget, messageId, isFromBot)
    -- ... (–≤–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
end

-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
function checkForNewMessages()
    if isTeleporting or not initialized then return false end
    
    local messages = getMessages()
    local foundTarget = false
    
    for _, message in ipairs(messages) do
        local messageId = message.message_id
        local messageText = message.text or message.caption
        
        -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
        if not messageText then
            continue
        end
        
        -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if allProcessedMessages[messageId] then
            continue
        end
        
        allProcessedMessages[messageId] = true
        
        local serverId = extractServerId(messageText)
        if serverId then
            local isTarget = hasTargetObjects(messageText)
            local isFromBot = message.from and message.from.is_bot
            local senderName = "Unknown"
            
            if message.from then
                if message.from.username then
                    senderName = "@" .. message.from.username
                elseif message.from.first_name then
                    senderName = message.from.first_name
                end
            end
            
            print("üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç " .. senderName .. 
                  " (–ë–æ—Ç: " .. tostring(isFromBot) .. ")" ..
                  " ID: " .. messageId)
            
            -- –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–µ–Ω—é –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è —Å serverId
            addNotificationToMenu(messageText, serverId, isTarget, messageId, isFromBot)
            
            -- –ê–≤—Ç–æ—Ç–µ–ª–µ–ø–æ—Ä—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–æ–≤ —Å —Ü–µ–ª–µ–≤—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏
            if isFromBot and isTarget and not foundTarget then
                print("üéØ –ù–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞! ID: " .. messageId)
                teleportToServer(serverId)
                foundTarget = true
            end
        end
    end
    
    return foundTarget
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
player.CharacterAdded:Connect(function()
    print("üéâ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É!")
    resetState()
end)

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
function startMonitoring()
    print("üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞...")
    
    -- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
    initializeBot()
    
    print("‚úÖ –°–∫—Ä–∏–ø—Ç –≥–æ—Ç–æ–≤! –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞...")
    
    while true do
        if not isTeleporting then
            checkForNewMessages()
        end
        wait(CHECK_DELAY)
    end
end

-- –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
print("========================================")
print("ü§ñ –¢–ï–õ–ï–ì–†–ê–ú –ê–í–¢–û-–¢–ï–õ–ï–ü–û–†–¢ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô)")
print("üë§ Chat ID: " .. CHAT_ID)
print("üéØ –ê–≤—Ç–æ-—Ü–µ–ª–∏: " .. table.concat(TARGET_OBJECTS, ", "))
print("üì± –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥ getUpdates")
print("========================================")

-- –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
spawn(startMonitoring)
