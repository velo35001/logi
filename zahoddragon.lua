-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ–ª–µ–ø–æ—Ä—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram API
local BOT_TOKEN = "7994146351:AAE_w1jgiZRvGHNG1jlTLyn7v8bvYyZe4Z8"
local CHAT_ID = "-1003189784409"
local API_URL = "https://api.telegram.org/bot" .. BOT_TOKEN

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
local TARGET_OBJECTS = {"Dragon Cannelloni", "Strawberry Elephant"}
local GAME_ID = 109983668079237
local MAX_RETRIES = 50
local CHECK_DELAY = 1
local MESSAGE_PROCESS_DELAY = 0.1 -- –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏–π

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
local isTeleporting = false
local currentServerId = ""
local retryCount = 0
local lastProcessedMessageId = 0
local scriptStartTime = os.time()
local initialized = false
local messageQueue = {} -- –û—á–µ—Ä–µ–¥—å —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏

-- –°—Ç–∏–ª—å UI
local UI_THEME = {
    PanelBg = Color3.fromRGB(16, 14, 24),
    PanelStroke = Color3.fromRGB(95, 70, 160),
    Accent = Color3.fromRGB(148, 0, 211),
    Accent2 = Color3.fromRGB(90, 60, 200),
    Text = Color3.fromRGB(235, 225, 255),
    ButtonOn = Color3.fromRGB(40, 160, 120),
    ButtonOff = Color3.fromRGB(160, 60, 80),
}

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –º–µ–Ω—é
local notificationMenu
local isMenuVisible = true
local notifications = {}
local MAX_NOTIFICATIONS = 10

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
function httpGet(url)
    local success, result = pcall(function()
        return game:HttpGet(url, true)
    end)
    return success, result
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –í–°–ï–• —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞ (–¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
function getAllBotMessages()
    local url = API_URL .. "/getUpdates?limit=100"
    local success, response = httpGet(url)
    
    if success and response then
        local data = HttpService:JSONDecode(response)
        if data.ok and data.result then
            return data.result
        end
    end
    return {}
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ù–û–í–´–• —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞
function getNewBotMessages()
    local url = API_URL .. "/getUpdates?offset=" .. (lastProcessedMessageId + 1) .. "&timeout=2"
    local success, response = httpGet(url)
    
    if success and response then
        local data = HttpService:JSONDecode(response)
        if data.ok and data.result then
            return data.result
        end
    end
    return {}
end

-- –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ - –Ω–∞—Ö–æ–¥–∏—Ç —Å–∞–º–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
function initializeMessageFilter()
    print("üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    local allMessages = getAllBotMessages()
    local maxMessageId = 0
    
    for _, update in ipairs(allMessages) do
        if update.message and update.message.chat and tostring(update.message.chat.id) == CHAT_ID then
            if update.message.message_id > maxMessageId then
                maxMessageId = update.message.message_id
            end
        end
    end
    
    if maxMessageId > 0 then
        lastProcessedMessageId = maxMessageId
        print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π message_id: " .. lastProcessedMessageId)
        print("üí° –°–∫—Ä–∏–ø—Ç –±—É–¥–µ—Ç –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ —ç—Ç–æ–≥–æ ID")
    else
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
    end
    
    initialized = true
end

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ü–µ–ª–µ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
function hasTargetObjects(messageText)
    if not messageText then return false end
    
    for _, target in ipairs(TARGET_OBJECTS) do
        if string.find(messageText, target) then
            return true
        end
    end
    return false
end

-- –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è serverId –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
function extractServerId(messageText)
    if not messageText then return nil end
    
    local pattern = "%x%x%x%x%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%x%x%x%x%x%x%x%x"
    local found = messageText:match(pattern)
    
    if found and #found == 36 then
        return found
    end
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —á–∞—Å—Ç–∏ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
function extractObjectsPart(messageText)
    if not messageText then return "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—ä–µ–∫—Ç–∞—Ö" end
    
    -- –ò—â–µ–º –±–ª–æ–∫ —Å –≤–∞–∂–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏
    local objectsStart = messageText:find("üö® –í–ê–ñ–ù–´–ï –û–ë–™–ï–ö–¢–´:")
    if not objectsStart then
        -- –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        objectsStart = messageText:find("–í–ê–ñ–ù–´–ï –û–ë–™–ï–ö–¢–´:")
        if not objectsStart then
            -- –ï—Å–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ –Ω–∞—à–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É–∫–æ—Ä–æ—á–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
            return messageText:gsub("\n", " "):sub(1, 80) .. "..."
        end
    end
    
    -- –ò—â–µ–º –∫–æ–Ω–µ—Ü –±–ª–æ–∫–∞ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ (–Ω–∞—á–∞–ª–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –∏–ª–∏ –∫–æ–Ω–µ—Ü —Å–æ–æ–±—â–µ–Ω–∏—è)
    local objectsEnd = messageText:find("üöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç:", objectsStart)
    if not objectsEnd then
        objectsEnd = messageText:find("–¢–µ–ª–µ–ø–æ—Ä—Ç:", objectsStart)
    end
    if not objectsEnd then
        objectsEnd = #messageText
    end
    
    local objectsText = messageText:sub(objectsStart, objectsEnd - 1)
    -- –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ –≤ –Ω–∞—á–∞–ª–µ/–∫–æ–Ω—Ü–µ
    objectsText = objectsText:gsub("^%s*\n*", ""):gsub("\n*%s*$", "")
    
    return objectsText
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
function teleportToServer(serverId)
    if isTeleporting then return end
    
    retryCount = retryCount + 1
    if retryCount > MAX_RETRIES then
        print("üö´ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫")
        resetState()
        return
    end
    
    isTeleporting = true
    currentServerId = serverId
    
    print("üîÑ –ü–æ–ø—ã—Ç–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ #" .. retryCount .. " –Ω–∞ —Å–µ—Ä–≤–µ—Ä: " .. serverId)
    
    local success, errorMsg = pcall(function()
        TeleportService:TeleportToPlaceInstance(GAME_ID, serverId)
    end)
    
    if not success then
        handleTeleportError(errorMsg)
    else
        print("‚úÖ –ó–∞–ø—Ä–æ—Å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    end
end

-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
function handleTeleportError(errorMsg)
    isTeleporting = false
    local errorText = tostring(errorMsg):lower()
    
    print("‚ùå –û—à–∏–±–∫–∞: " .. errorText)
    
    if errorText:find("full") or errorText:find("–ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω") or errorText:find("capacity") then
        print("‚ö° –°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω! –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–æ–≤—Ç–æ—Ä...")
        wait(0.1)
        teleportToServer(currentServerId)
    else
        print("‚è≥ –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...")
        wait(2)
        teleportToServer(currentServerId)
    end
end

-- –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
function resetState()
    isTeleporting = false
    retryCount = 0
    currentServerId = ""
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function createNotificationMenu()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "TelegramNotifications"
    screenGui.Parent = CoreGui
    screenGui.ResetOnSpawn = false
    
    notificationMenu = Instance.new("Frame")
    notificationMenu.Name = "NotificationMenu"
    notificationMenu.Size = UDim2.new(0, 400, 0, 500) -- –£–≤–µ–ª–∏—á–∏–º —Ä–∞–∑–º–µ—Ä –¥–ª—è –±–æ–ª—å—à–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    notificationMenu.Position = UDim2.new(0, 10, 0.5, -250)
    notificationMenu.AnchorPoint = Vector2.new(0, 0.5)
    notificationMenu.BackgroundColor3 = UI_THEME.PanelBg
    notificationMenu.BackgroundTransparency = 0.1
    notificationMenu.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = notificationMenu
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = UI_THEME.PanelStroke
    stroke.Thickness = 2
    stroke.Parent = notificationMenu
    
    local header = Instance.new("TextLabel")
    header.Name = "Header"
    header.Text = "üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞"
    header.Font = Enum.Font.GothamBold
    header.TextSize = 16
    header.TextColor3 = UI_THEME.Text
    header.BackgroundTransparency = 1
    header.Size = UDim2.new(1, 0, 0, 40)
    header.Position = UDim2.new(0, 0, 0, 0)
    header.Parent = notificationMenu
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Text = "‚àí"
    toggleButton.Font = Enum.Font.GothamBlack
    toggleButton.TextSize = 18
    toggleButton.Size = UDim2.new(0, 30, 0, 30)
    toggleButton.Position = UDim2.new(1, -35, 0, 5)
    toggleButton.BackgroundColor3 = UI_THEME.Accent
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.AutoButtonColor = true
    toggleButton.Parent = notificationMenu
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 6)
    toggleCorner.Parent = toggleButton
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Name = "NotificationsScroll"
    scrollFrame.Size = UDim2.new(1, -10, 1, -50)
    scrollFrame.Position = UDim2.new(0, 5, 0, 45)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.ScrollBarThickness = 6
    scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    scrollFrame.Parent = notificationMenu
    
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 8)
    layout.Parent = scrollFrame
    
    toggleButton.MouseButton1Click:Connect(function()
        isMenuVisible = not isMenuVisible
        if isMenuVisible then
            notificationMenu.Size = UDim2.new(0, 400, 0, 500)
            toggleButton.Text = "‚àí"
        else
            notificationMenu.Size = UDim2.new(0, 400, 0, 40)
            toggleButton.Text = "+"
        end
    end)
    
    return scrollFrame
end

-- –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –º–µ–Ω—é
function addNotificationToMenu(messageText, serverId, isTarget, messageId)
    local scrollFrame = notificationMenu:FindFirstChild("NotificationsScroll")
    if not scrollFrame then 
        wait(0.1) -- –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é
        scrollFrame = notificationMenu:FindFirstChild("NotificationsScroll")
        if not scrollFrame then return end
    end
    
    -- –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –µ—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç
    while #notifications >= MAX_NOTIFICATIONS do
        local oldestNotification = table.remove(notifications, 1)
        if oldestNotification and oldestNotification.frame then
            oldestNotification.frame:Destroy()
        end
    end
    
    -- –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —á–∞—Å—Ç—å —Å –æ–±—ä–µ–∫—Ç–∞–º–∏
    local objectsText = extractObjectsPart(messageText)
    
    -- –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    local notificationFrame = Instance.new("Frame")
    notificationFrame.Size = UDim2.new(1, 0, 0, 70) -- –£–º–µ–Ω—å—à–∏–º –≤—ã—Å–æ—Ç—É –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏
    notificationFrame.BackgroundColor3 = isTarget and UI_THEME.ButtonOn or UI_THEME.ButtonOff
    notificationFrame.BackgroundTransparency = 0.2
    notificationFrame.Parent = scrollFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = notificationFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = isTarget and Color3.fromRGB(100, 200, 100) or UI_THEME.PanelStroke
    stroke.Thickness = 1.5
    stroke.Parent = notificationFrame
    
    -- –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç—ã)
    local textLabel = Instance.new("TextLabel")
    textLabel.Text = objectsText
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextSize = 12
    textLabel.TextColor3 = UI_THEME.Text
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(1, -80, 1, -25)
    textLabel.Position = UDim2.new(0, 5, 0, 5)
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Top
    textLabel.TextWrapped = true
    textLabel.Parent = notificationFrame
    
    -- –í—Ä–µ–º—è –∏ ID
    local infoLabel = Instance.new("TextLabel")
    infoLabel.Text = "ID: " .. messageId .. " | " .. os.date("%H:%M:%S")
    infoLabel.Font = Enum.Font.Gotham
    infoLabel.TextSize = 10
    infoLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    infoLabel.BackgroundTransparency = 1
    infoLabel.Size = UDim2.new(1, -80, 0, 15)
    infoLabel.Position = UDim2.new(0, 5, 1, -18)
    infoLabel.TextXAlignment = Enum.TextXAlignment.Left
    infoLabel.Parent = notificationFrame
    
    -- –ö–Ω–æ–ø–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞
    local teleportButton = Instance.new("TextButton")
    teleportButton.Text = "üöÄ"
    teleportButton.Font = Enum.Font.GothamBold
    teleportButton.TextSize = 16
    teleportButton.Size = UDim2.new(0, 60, 0, 25)
    teleportButton.Position = UDim2.new(1, -65, 0.5, -12)
    teleportButton.AnchorPoint = Vector2.new(1, 0.5)
    teleportButton.BackgroundColor3 = UI_THEME.Accent
    teleportButton.TextColor3 = Color3.new(1, 1, 1)
    teleportButton.AutoButtonColor = true
    teleportButton.Parent = notificationFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = teleportButton
    
    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞
    teleportButton.MouseButton1Click:Connect(function()
        teleportToServer(serverId)
    end)
    
    local notification = {
        frame = notificationFrame,
        text = messageText,
        serverId = serverId,
        messageId = messageId,
        timestamp = os.time(),
        isTarget = isTarget
    }
    
    table.insert(notifications, notification)
    
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –º–µ–Ω—é. –í—Å–µ–≥–æ: " .. #notifications)
    
    return notification
end

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞
function checkForNewServers()
    if isTeleporting or not initialized then return end
    
    local newMessages = getNewBotMessages()
    local foundTarget = false
    local maxMessageIdInThisBatch = lastProcessedMessageId
    
    for _, update in ipairs(newMessages) do
        if update.message and update.message.chat and tostring(update.message.chat.id) == CHAT_ID then
            local message = update.message
            local messageId = message.message_id
            local messageText = message.text
            
            -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏
            if messageId <= lastProcessedMessageId then
                continue
            end
            
            -- –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ID
            if messageId > maxMessageIdInThisBatch then
                maxMessageIdInThisBatch = messageId
            end
            
            if messageText then
                local serverId = extractServerId(messageText)
                if serverId then
                    local isTarget = hasTargetObjects(messageText)
                    
                    -- –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–µ–Ω—é –≤—Å–µ –Ω–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                    addNotificationToMenu(messageText, serverId, isTarget, messageId)
                    
                    -- –ê–≤—Ç–æ—Ç–µ–ª–µ–ø–æ—Ä—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è —Ü–µ–ª–µ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
                    if isTarget and not foundTarget then
                        print("üéØ –ù–∞–π–¥–µ–Ω–æ –ù–û–í–û–ï –ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! ID: " .. messageId)
                        teleportToServer(serverId)
                        foundTarget = true
                    end
                end
            end
        end
    end
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π ID
    if maxMessageIdInThisBatch > lastProcessedMessageId then
        lastProcessedMessageId = maxMessageIdInThisBatch
        print("üìä –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π message_id: " .. lastProcessedMessageId)
    end
    
    return foundTarget
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
player.CharacterAdded:Connect(function()
    print("üéâ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É!")
    resetState()
end)

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ M –¥–ª—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –º–µ–Ω—é
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.M then
        isMenuVisible = not isMenuVisible
        if notificationMenu then
            if isMenuVisible then
                notificationMenu.Size = UDim2.new(0, 400, 0, 500)
            else
                notificationMenu.Size = UDim2.new(0, 400, 0, 40)
            end
        end
    end
end)

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
function startMonitoring()
    print("üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞...")
    
    -- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
    initializeMessageFilter()
    
    -- –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é
    createNotificationMenu()
    
    print("‚úÖ –°–∫—Ä–∏–ø—Ç –≥–æ—Ç–æ–≤! –û–∂–∏–¥–∞—é –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    while true do
        if not isTeleporting then
            checkForNewServers()
        end
        wait(CHECK_DELAY)
    end
end

-- –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
print("========================================")
print("ü§ñ –¢–ï–õ–ï–ì–†–ê–ú –ê–í–¢–û-–¢–ï–õ–ï–ü–û–†–¢ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –ú–ï–ù–Æ)")
print("üë§ Chat ID: " .. CHAT_ID)
print("üéØ –ê–≤—Ç–æ-—Ü–µ–ª–∏: " .. table.concat(TARGET_OBJECTS, ", "))
print("üì± –ú–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–ª–µ–≤–∞ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç—ã)")
print("üîß M - —Å–≤–µ—Ä–Ω—É—Ç—å/—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—é")
print("========================================")

-- –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
spawn(startMonitoring)

-- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
function manualTeleport(serverId)
    if serverId and #serverId == 36 then
        resetState()
        teleportToServer(serverId)
    else
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π serverId!")
    end
end

function addTarget(objectName)
    table.insert(TARGET_OBJECTS, objectName)
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ü–µ–ª—å –¥–ª—è –∞–≤—Ç–æ—Ç–µ–ª–µ–ø–æ—Ä—Ç–∞: " .. objectName)
end

function clearNotifications()
    local scrollFrame = notificationMenu and notificationMenu:FindFirstChild("NotificationsScroll")
    if scrollFrame then
        for _, child in ipairs(scrollFrame:GetChildren()) do
            if child:IsA("Frame") then
                child:Destroy()
            end
        end
    end
    notifications = {}
    print("üóë –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã")
end

function showNotificationCount()
    print("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –º–µ–Ω—é: " .. #notifications)
end
